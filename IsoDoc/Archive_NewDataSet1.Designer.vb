'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("Archive_NewDataSet1"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class Archive_NewDataSet1
    Inherits Global.System.Data.DataSet
    
    Private tableVwAch_DieMaps As VwAch_DieMapsDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("VwAch_DieMaps")) Is Nothing) Then
                MyBase.Tables.Add(New VwAch_DieMapsDataTable(ds.Tables("VwAch_DieMaps")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VwAch_DieMaps() As VwAch_DieMapsDataTable
        Get
            Return Me.tableVwAch_DieMaps
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As Archive_NewDataSet1 = CType(MyBase.Clone,Archive_NewDataSet1)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("VwAch_DieMaps")) Is Nothing) Then
                MyBase.Tables.Add(New VwAch_DieMapsDataTable(ds.Tables("VwAch_DieMaps")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVwAch_DieMaps = CType(MyBase.Tables("VwAch_DieMaps"),VwAch_DieMapsDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVwAch_DieMaps) Is Nothing) Then
                Me.tableVwAch_DieMaps.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "Archive_NewDataSet1"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/Archive_NewDataSet1.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVwAch_DieMaps = New VwAch_DieMapsDataTable()
        MyBase.Tables.Add(Me.tableVwAch_DieMaps)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Function ShouldSerializeVwAch_DieMaps() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As Archive_NewDataSet1 = New Archive_NewDataSet1()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Delegate Sub VwAch_DieMapsRowChangeEventHandler(ByVal sender As Object, ByVal e As VwAch_DieMapsRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VwAch_DieMapsDataTable
        Inherits Global.System.Data.TypedTableBase(Of VwAch_DieMapsRow)
        
        Private columnMapID As Global.System.Data.DataColumn
        
        Private columnCheckerPersonID As Global.System.Data.DataColumn
        
        Private columnDocTypeID As Global.System.Data.DataColumn
        
        Private columnDoctypeName As Global.System.Data.DataColumn
        
        Private columnRegistTypeID As Global.System.Data.DataColumn
        
        Private columnReviewDate As Global.System.Data.DataColumn
        
        Private columnReviewNum As Global.System.Data.DataColumn
        
        Private columnPgTypeID As Global.System.Data.DataColumn
        
        Private columnDocumentTypeID As Global.System.Data.DataColumn
        
        Private columnIsoDocViewID As Global.System.Data.DataColumn
        
        Private columnDocStateID As Global.System.Data.DataColumn
        
        Private columnFilePath As Global.System.Data.DataColumn
        
        Private columnFileTypeID As Global.System.Data.DataColumn
        
        Private columnExplain As Global.System.Data.DataColumn
        
        Private columnMapStateID As Global.System.Data.DataColumn
        
        Private columnDesignDate As Global.System.Data.DataColumn
        
        Private columnSheetNum As Global.System.Data.DataColumn
        
        Private columnEnterDate As Global.System.Data.DataColumn
        
        Private columnDocumentTypetxt As Global.System.Data.DataColumn
        
        Private columnPgTypeTxt As Global.System.Data.DataColumn
        
        Private columnIsoDocViewTxt As Global.System.Data.DataColumn
        
        Private columnMapStateTxt As Global.System.Data.DataColumn
        
        Private columnPersonID As Global.System.Data.DataColumn
        
        Private columnDesignerPersonID As Global.System.Data.DataColumn
        
        Private columnDesignerName As Global.System.Data.DataColumn
        
        Private columnChekerName As Global.System.Data.DataColumn
        
        Private columnDocRegisttxt As Global.System.Data.DataColumn
        
        Private columnStateTxt As Global.System.Data.DataColumn
        
        Private columnStateID As Global.System.Data.DataColumn
        
        Private columnTrustExistID As Global.System.Data.DataColumn
        
        Private columnPanelID As Global.System.Data.DataColumn
        
        Private columnOKDate As Global.System.Data.DataColumn
        
        Private columnFileTypeTxt As Global.System.Data.DataColumn
        
        Private columnDieID As Global.System.Data.DataColumn
        
        Private columnProjectID As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VwAch_DieMaps"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MapIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMapID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property CheckerPersonIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCheckerPersonID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DocTypeIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocTypeID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DoctypeNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDoctypeName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property RegistTypeIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRegistTypeID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ReviewDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReviewDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ReviewNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnReviewNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PgTypeIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPgTypeID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DocumentTypeIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentTypeID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property IsoDocViewIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsoDocViewID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DocStateIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocStateID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FilePathColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFilePath
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FileTypeIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFileTypeID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ExplainColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExplain
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MapStateIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMapStateID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DesignDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesignDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property SheetNumColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSheetNum
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property EnterDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEnterDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DocumentTypetxtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocumentTypetxt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PgTypeTxtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPgTypeTxt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property IsoDocViewTxtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIsoDocViewTxt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property MapStateTxtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMapStateTxt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PersonIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPersonID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DesignerPersonIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesignerPersonID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DesignerNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDesignerName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ChekerNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnChekerName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DocRegisttxtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDocRegisttxt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StateTxtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStateTxt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property StateIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStateID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property TrustExistIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTrustExistID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property PanelIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPanelID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property OKDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOKDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property FileTypeTxtColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFileTypeTxt
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property DieIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDieID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property ProjectIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProjectID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VwAch_DieMapsRow
            Get
                Return CType(Me.Rows(index),VwAch_DieMapsRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event VwAch_DieMapsRowChanging As VwAch_DieMapsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event VwAch_DieMapsRowChanged As VwAch_DieMapsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event VwAch_DieMapsRowDeleting As VwAch_DieMapsRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Event VwAch_DieMapsRowDeleted As VwAch_DieMapsRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Sub AddVwAch_DieMapsRow(ByVal row As VwAch_DieMapsRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overloads Function AddVwAch_DieMapsRow( _
                    ByVal CheckerPersonID As Integer,  _
                    ByVal DocTypeID As Short,  _
                    ByVal DoctypeName As String,  _
                    ByVal RegistTypeID As Short,  _
                    ByVal ReviewDate As String,  _
                    ByVal ReviewNum As String,  _
                    ByVal PgTypeID As Byte,  _
                    ByVal DocumentTypeID As Short,  _
                    ByVal IsoDocViewID As Byte,  _
                    ByVal DocStateID As Byte,  _
                    ByVal FilePath As String,  _
                    ByVal FileTypeID As Byte,  _
                    ByVal Explain As String,  _
                    ByVal MapStateID As Short,  _
                    ByVal DesignDate As String,  _
                    ByVal SheetNum As Integer,  _
                    ByVal EnterDate As String,  _
                    ByVal DocumentTypetxt As String,  _
                    ByVal PgTypeTxt As String,  _
                    ByVal IsoDocViewTxt As String,  _
                    ByVal MapStateTxt As String,  _
                    ByVal PersonID As Integer,  _
                    ByVal DesignerPersonID As Integer,  _
                    ByVal DesignerName As String,  _
                    ByVal ChekerName As String,  _
                    ByVal DocRegisttxt As String,  _
                    ByVal StateTxt As String,  _
                    ByVal StateID As Byte,  _
                    ByVal TrustExistID As Integer,  _
                    ByVal PanelID As String,  _
                    ByVal OKDate As String,  _
                    ByVal FileTypeTxt As String,  _
                    ByVal DieID As String,  _
                    ByVal ProjectID As String) As VwAch_DieMapsRow
            Dim rowVwAch_DieMapsRow As VwAch_DieMapsRow = CType(Me.NewRow,VwAch_DieMapsRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CheckerPersonID, DocTypeID, DoctypeName, RegistTypeID, ReviewDate, ReviewNum, PgTypeID, DocumentTypeID, IsoDocViewID, DocStateID, FilePath, FileTypeID, Explain, MapStateID, DesignDate, SheetNum, EnterDate, DocumentTypetxt, PgTypeTxt, IsoDocViewTxt, MapStateTxt, PersonID, DesignerPersonID, DesignerName, ChekerName, DocRegisttxt, StateTxt, StateID, TrustExistID, PanelID, OKDate, FileTypeTxt, DieID, ProjectID}
            rowVwAch_DieMapsRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVwAch_DieMapsRow)
            Return rowVwAch_DieMapsRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VwAch_DieMapsDataTable = CType(MyBase.Clone,VwAch_DieMapsDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VwAch_DieMapsDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnMapID = MyBase.Columns("MapID")
            Me.columnCheckerPersonID = MyBase.Columns("CheckerPersonID")
            Me.columnDocTypeID = MyBase.Columns("DocTypeID")
            Me.columnDoctypeName = MyBase.Columns("DoctypeName")
            Me.columnRegistTypeID = MyBase.Columns("RegistTypeID")
            Me.columnReviewDate = MyBase.Columns("ReviewDate")
            Me.columnReviewNum = MyBase.Columns("ReviewNum")
            Me.columnPgTypeID = MyBase.Columns("PgTypeID")
            Me.columnDocumentTypeID = MyBase.Columns("DocumentTypeID")
            Me.columnIsoDocViewID = MyBase.Columns("IsoDocViewID")
            Me.columnDocStateID = MyBase.Columns("DocStateID")
            Me.columnFilePath = MyBase.Columns("FilePath")
            Me.columnFileTypeID = MyBase.Columns("FileTypeID")
            Me.columnExplain = MyBase.Columns("Explain")
            Me.columnMapStateID = MyBase.Columns("MapStateID")
            Me.columnDesignDate = MyBase.Columns("DesignDate")
            Me.columnSheetNum = MyBase.Columns("SheetNum")
            Me.columnEnterDate = MyBase.Columns("EnterDate")
            Me.columnDocumentTypetxt = MyBase.Columns("DocumentTypetxt")
            Me.columnPgTypeTxt = MyBase.Columns("PgTypeTxt")
            Me.columnIsoDocViewTxt = MyBase.Columns("IsoDocViewTxt")
            Me.columnMapStateTxt = MyBase.Columns("MapStateTxt")
            Me.columnPersonID = MyBase.Columns("PersonID")
            Me.columnDesignerPersonID = MyBase.Columns("DesignerPersonID")
            Me.columnDesignerName = MyBase.Columns("DesignerName")
            Me.columnChekerName = MyBase.Columns("ChekerName")
            Me.columnDocRegisttxt = MyBase.Columns("DocRegisttxt")
            Me.columnStateTxt = MyBase.Columns("StateTxt")
            Me.columnStateID = MyBase.Columns("StateID")
            Me.columnTrustExistID = MyBase.Columns("TrustExistID")
            Me.columnPanelID = MyBase.Columns("PanelID")
            Me.columnOKDate = MyBase.Columns("OKDate")
            Me.columnFileTypeTxt = MyBase.Columns("FileTypeTxt")
            Me.columnDieID = MyBase.Columns("DieID")
            Me.columnProjectID = MyBase.Columns("ProjectID")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitClass()
            Me.columnMapID = New Global.System.Data.DataColumn("MapID", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMapID)
            Me.columnCheckerPersonID = New Global.System.Data.DataColumn("CheckerPersonID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCheckerPersonID)
            Me.columnDocTypeID = New Global.System.Data.DataColumn("DocTypeID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocTypeID)
            Me.columnDoctypeName = New Global.System.Data.DataColumn("DoctypeName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDoctypeName)
            Me.columnRegistTypeID = New Global.System.Data.DataColumn("RegistTypeID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRegistTypeID)
            Me.columnReviewDate = New Global.System.Data.DataColumn("ReviewDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReviewDate)
            Me.columnReviewNum = New Global.System.Data.DataColumn("ReviewNum", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnReviewNum)
            Me.columnPgTypeID = New Global.System.Data.DataColumn("PgTypeID", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPgTypeID)
            Me.columnDocumentTypeID = New Global.System.Data.DataColumn("DocumentTypeID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentTypeID)
            Me.columnIsoDocViewID = New Global.System.Data.DataColumn("IsoDocViewID", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsoDocViewID)
            Me.columnDocStateID = New Global.System.Data.DataColumn("DocStateID", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocStateID)
            Me.columnFilePath = New Global.System.Data.DataColumn("FilePath", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFilePath)
            Me.columnFileTypeID = New Global.System.Data.DataColumn("FileTypeID", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFileTypeID)
            Me.columnExplain = New Global.System.Data.DataColumn("Explain", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExplain)
            Me.columnMapStateID = New Global.System.Data.DataColumn("MapStateID", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMapStateID)
            Me.columnDesignDate = New Global.System.Data.DataColumn("DesignDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesignDate)
            Me.columnSheetNum = New Global.System.Data.DataColumn("SheetNum", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSheetNum)
            Me.columnEnterDate = New Global.System.Data.DataColumn("EnterDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEnterDate)
            Me.columnDocumentTypetxt = New Global.System.Data.DataColumn("DocumentTypetxt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocumentTypetxt)
            Me.columnPgTypeTxt = New Global.System.Data.DataColumn("PgTypeTxt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPgTypeTxt)
            Me.columnIsoDocViewTxt = New Global.System.Data.DataColumn("IsoDocViewTxt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIsoDocViewTxt)
            Me.columnMapStateTxt = New Global.System.Data.DataColumn("MapStateTxt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMapStateTxt)
            Me.columnPersonID = New Global.System.Data.DataColumn("PersonID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPersonID)
            Me.columnDesignerPersonID = New Global.System.Data.DataColumn("DesignerPersonID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesignerPersonID)
            Me.columnDesignerName = New Global.System.Data.DataColumn("DesignerName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDesignerName)
            Me.columnChekerName = New Global.System.Data.DataColumn("ChekerName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnChekerName)
            Me.columnDocRegisttxt = New Global.System.Data.DataColumn("DocRegisttxt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDocRegisttxt)
            Me.columnStateTxt = New Global.System.Data.DataColumn("StateTxt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStateTxt)
            Me.columnStateID = New Global.System.Data.DataColumn("StateID", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStateID)
            Me.columnTrustExistID = New Global.System.Data.DataColumn("TrustExistID", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTrustExistID)
            Me.columnPanelID = New Global.System.Data.DataColumn("PanelID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPanelID)
            Me.columnOKDate = New Global.System.Data.DataColumn("OKDate", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOKDate)
            Me.columnFileTypeTxt = New Global.System.Data.DataColumn("FileTypeTxt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFileTypeTxt)
            Me.columnDieID = New Global.System.Data.DataColumn("DieID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDieID)
            Me.columnProjectID = New Global.System.Data.DataColumn("ProjectID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProjectID)
            Me.columnMapID.AutoIncrement = true
            Me.columnMapID.AllowDBNull = false
            Me.columnMapID.ReadOnly = true
            Me.columnDoctypeName.MaxLength = 30
            Me.columnReviewDate.MaxLength = 10
            Me.columnReviewNum.MaxLength = 5
            Me.columnFilePath.MaxLength = 300
            Me.columnExplain.MaxLength = 50
            Me.columnDesignDate.MaxLength = 10
            Me.columnEnterDate.MaxLength = 10
            Me.columnDocumentTypetxt.MaxLength = 10
            Me.columnPgTypeTxt.MaxLength = 50
            Me.columnIsoDocViewTxt.MaxLength = 50
            Me.columnMapStateTxt.MaxLength = 50
            Me.columnPersonID.AllowDBNull = false
            Me.columnDesignerName.ReadOnly = true
            Me.columnDesignerName.MaxLength = 56
            Me.columnChekerName.ReadOnly = true
            Me.columnChekerName.MaxLength = 56
            Me.columnDocRegisttxt.MaxLength = 50
            Me.columnStateTxt.MaxLength = 50
            Me.columnStateID.AllowDBNull = false
            Me.columnPanelID.MaxLength = 10
            Me.columnOKDate.MaxLength = 19
            Me.columnFileTypeTxt.MaxLength = 50
            Me.columnDieID.MaxLength = 50
            Me.columnProjectID.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function NewVwAch_DieMapsRow() As VwAch_DieMapsRow
            Return CType(Me.NewRow,VwAch_DieMapsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VwAch_DieMapsRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VwAch_DieMapsRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VwAch_DieMapsRowChangedEvent) Is Nothing) Then
                RaiseEvent VwAch_DieMapsRowChanged(Me, New VwAch_DieMapsRowChangeEvent(CType(e.Row,VwAch_DieMapsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VwAch_DieMapsRowChangingEvent) Is Nothing) Then
                RaiseEvent VwAch_DieMapsRowChanging(Me, New VwAch_DieMapsRowChangeEvent(CType(e.Row,VwAch_DieMapsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VwAch_DieMapsRowDeletedEvent) Is Nothing) Then
                RaiseEvent VwAch_DieMapsRowDeleted(Me, New VwAch_DieMapsRowChangeEvent(CType(e.Row,VwAch_DieMapsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VwAch_DieMapsRowDeletingEvent) Is Nothing) Then
                RaiseEvent VwAch_DieMapsRowDeleting(Me, New VwAch_DieMapsRowChangeEvent(CType(e.Row,VwAch_DieMapsRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub RemoveVwAch_DieMapsRow(ByVal row As VwAch_DieMapsRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As Archive_NewDataSet1 = New Archive_NewDataSet1()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VwAch_DieMapsDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VwAch_DieMapsRow
        Inherits Global.System.Data.DataRow
        
        Private tableVwAch_DieMaps As VwAch_DieMapsDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVwAch_DieMaps = CType(Me.Table,VwAch_DieMapsDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MapID() As Long
            Get
                Return CType(Me(Me.tableVwAch_DieMaps.MapIDColumn),Long)
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.MapIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property CheckerPersonID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.CheckerPersonIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CheckerPersonID' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.CheckerPersonIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DocTypeID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.DocTypeIDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocTypeID' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.DocTypeIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DoctypeName() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.DoctypeNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DoctypeName' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.DoctypeNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property RegistTypeID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.RegistTypeIDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RegistTypeID' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.RegistTypeIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ReviewDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.ReviewDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReviewDate' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.ReviewDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ReviewNum() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.ReviewNumColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ReviewNum' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.ReviewNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PgTypeID() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.PgTypeIDColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PgTypeID' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.PgTypeIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DocumentTypeID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.DocumentTypeIDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocumentTypeID' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.DocumentTypeIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property IsoDocViewID() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.IsoDocViewIDColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsoDocViewID' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.IsoDocViewIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DocStateID() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.DocStateIDColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocStateID' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.DocStateIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FilePath() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.FilePathColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FilePath' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.FilePathColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FileTypeID() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.FileTypeIDColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FileTypeID' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.FileTypeIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property Explain() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.ExplainColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Explain' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.ExplainColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MapStateID() As Short
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.MapStateIDColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MapStateID' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.MapStateIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DesignDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.DesignDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DesignDate' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.DesignDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property SheetNum() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.SheetNumColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SheetNum' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.SheetNumColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property EnterDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.EnterDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EnterDate' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.EnterDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DocumentTypetxt() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.DocumentTypetxtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocumentTypetxt' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.DocumentTypetxtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PgTypeTxt() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.PgTypeTxtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PgTypeTxt' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.PgTypeTxtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property IsoDocViewTxt() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.IsoDocViewTxtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IsoDocViewTxt' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.IsoDocViewTxtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property MapStateTxt() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.MapStateTxtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MapStateTxt' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.MapStateTxtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PersonID() As Integer
            Get
                Return CType(Me(Me.tableVwAch_DieMaps.PersonIDColumn),Integer)
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.PersonIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DesignerPersonID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.DesignerPersonIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DesignerPersonID' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.DesignerPersonIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DesignerName() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.DesignerNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DesignerName' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.DesignerNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ChekerName() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.ChekerNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ChekerName' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.ChekerNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DocRegisttxt() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.DocRegisttxtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DocRegisttxt' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.DocRegisttxtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StateTxt() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.StateTxtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'StateTxt' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.StateTxtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property StateID() As Byte
            Get
                Return CType(Me(Me.tableVwAch_DieMaps.StateIDColumn),Byte)
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.StateIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property TrustExistID() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.TrustExistIDColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TrustExistID' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.TrustExistIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property PanelID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.PanelIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PanelID' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.PanelIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property OKDate() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.OKDateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OKDate' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.OKDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property FileTypeTxt() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.FileTypeTxtColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FileTypeTxt' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.FileTypeTxtColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property DieID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.DieIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DieID' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.DieIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ProjectID() As String
            Get
                Try 
                    Return CType(Me(Me.tableVwAch_DieMaps.ProjectIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ProjectID' in table 'VwAch_DieMaps' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVwAch_DieMaps.ProjectIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsCheckerPersonIDNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.CheckerPersonIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetCheckerPersonIDNull()
            Me(Me.tableVwAch_DieMaps.CheckerPersonIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDocTypeIDNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.DocTypeIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDocTypeIDNull()
            Me(Me.tableVwAch_DieMaps.DocTypeIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDoctypeNameNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.DoctypeNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDoctypeNameNull()
            Me(Me.tableVwAch_DieMaps.DoctypeNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsRegistTypeIDNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.RegistTypeIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetRegistTypeIDNull()
            Me(Me.tableVwAch_DieMaps.RegistTypeIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsReviewDateNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.ReviewDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetReviewDateNull()
            Me(Me.tableVwAch_DieMaps.ReviewDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsReviewNumNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.ReviewNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetReviewNumNull()
            Me(Me.tableVwAch_DieMaps.ReviewNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPgTypeIDNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.PgTypeIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPgTypeIDNull()
            Me(Me.tableVwAch_DieMaps.PgTypeIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDocumentTypeIDNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.DocumentTypeIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDocumentTypeIDNull()
            Me(Me.tableVwAch_DieMaps.DocumentTypeIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsIsoDocViewIDNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.IsoDocViewIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetIsoDocViewIDNull()
            Me(Me.tableVwAch_DieMaps.IsoDocViewIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDocStateIDNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.DocStateIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDocStateIDNull()
            Me(Me.tableVwAch_DieMaps.DocStateIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFilePathNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.FilePathColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFilePathNull()
            Me(Me.tableVwAch_DieMaps.FilePathColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFileTypeIDNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.FileTypeIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFileTypeIDNull()
            Me(Me.tableVwAch_DieMaps.FileTypeIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsExplainNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.ExplainColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetExplainNull()
            Me(Me.tableVwAch_DieMaps.ExplainColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMapStateIDNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.MapStateIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMapStateIDNull()
            Me(Me.tableVwAch_DieMaps.MapStateIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDesignDateNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.DesignDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDesignDateNull()
            Me(Me.tableVwAch_DieMaps.DesignDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsSheetNumNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.SheetNumColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetSheetNumNull()
            Me(Me.tableVwAch_DieMaps.SheetNumColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsEnterDateNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.EnterDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetEnterDateNull()
            Me(Me.tableVwAch_DieMaps.EnterDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDocumentTypetxtNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.DocumentTypetxtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDocumentTypetxtNull()
            Me(Me.tableVwAch_DieMaps.DocumentTypetxtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPgTypeTxtNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.PgTypeTxtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPgTypeTxtNull()
            Me(Me.tableVwAch_DieMaps.PgTypeTxtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsIsoDocViewTxtNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.IsoDocViewTxtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetIsoDocViewTxtNull()
            Me(Me.tableVwAch_DieMaps.IsoDocViewTxtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsMapStateTxtNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.MapStateTxtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetMapStateTxtNull()
            Me(Me.tableVwAch_DieMaps.MapStateTxtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDesignerPersonIDNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.DesignerPersonIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDesignerPersonIDNull()
            Me(Me.tableVwAch_DieMaps.DesignerPersonIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDesignerNameNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.DesignerNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDesignerNameNull()
            Me(Me.tableVwAch_DieMaps.DesignerNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsChekerNameNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.ChekerNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetChekerNameNull()
            Me(Me.tableVwAch_DieMaps.ChekerNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDocRegisttxtNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.DocRegisttxtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDocRegisttxtNull()
            Me(Me.tableVwAch_DieMaps.DocRegisttxtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsStateTxtNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.StateTxtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetStateTxtNull()
            Me(Me.tableVwAch_DieMaps.StateTxtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsTrustExistIDNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.TrustExistIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetTrustExistIDNull()
            Me(Me.tableVwAch_DieMaps.TrustExistIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsPanelIDNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.PanelIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetPanelIDNull()
            Me(Me.tableVwAch_DieMaps.PanelIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsOKDateNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.OKDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetOKDateNull()
            Me(Me.tableVwAch_DieMaps.OKDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsFileTypeTxtNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.FileTypeTxtColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetFileTypeTxtNull()
            Me(Me.tableVwAch_DieMaps.FileTypeTxtColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsDieIDNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.DieIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetDieIDNull()
            Me(Me.tableVwAch_DieMaps.DieIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Function IsProjectIDNull() As Boolean
            Return Me.IsNull(Me.tableVwAch_DieMaps.ProjectIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub SetProjectIDNull()
            Me(Me.tableVwAch_DieMaps.ProjectIDColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
    Public Class VwAch_DieMapsRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VwAch_DieMapsRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New(ByVal row As VwAch_DieMapsRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Row() As VwAch_DieMapsRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace Archive_NewDataSet1TableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VwAch_DieMapsTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VwAch_DieMaps"
            tableMapping.ColumnMappings.Add("MapID", "MapID")
            tableMapping.ColumnMappings.Add("CheckerPersonID", "CheckerPersonID")
            tableMapping.ColumnMappings.Add("DocTypeID", "DocTypeID")
            tableMapping.ColumnMappings.Add("DoctypeName", "DoctypeName")
            tableMapping.ColumnMappings.Add("RegistTypeID", "RegistTypeID")
            tableMapping.ColumnMappings.Add("ReviewDate", "ReviewDate")
            tableMapping.ColumnMappings.Add("ReviewNum", "ReviewNum")
            tableMapping.ColumnMappings.Add("PgTypeID", "PgTypeID")
            tableMapping.ColumnMappings.Add("DocumentTypeID", "DocumentTypeID")
            tableMapping.ColumnMappings.Add("IsoDocViewID", "IsoDocViewID")
            tableMapping.ColumnMappings.Add("DocStateID", "DocStateID")
            tableMapping.ColumnMappings.Add("FilePath", "FilePath")
            tableMapping.ColumnMappings.Add("FileTypeID", "FileTypeID")
            tableMapping.ColumnMappings.Add("Explain", "Explain")
            tableMapping.ColumnMappings.Add("MapStateID", "MapStateID")
            tableMapping.ColumnMappings.Add("DesignDate", "DesignDate")
            tableMapping.ColumnMappings.Add("SheetNum", "SheetNum")
            tableMapping.ColumnMappings.Add("EnterDate", "EnterDate")
            tableMapping.ColumnMappings.Add("DocumentTypetxt", "DocumentTypetxt")
            tableMapping.ColumnMappings.Add("PgTypeTxt", "PgTypeTxt")
            tableMapping.ColumnMappings.Add("IsoDocViewTxt", "IsoDocViewTxt")
            tableMapping.ColumnMappings.Add("MapStateTxt", "MapStateTxt")
            tableMapping.ColumnMappings.Add("PersonID", "PersonID")
            tableMapping.ColumnMappings.Add("DesignerPersonID", "DesignerPersonID")
            tableMapping.ColumnMappings.Add("DesignerName", "DesignerName")
            tableMapping.ColumnMappings.Add("ChekerName", "ChekerName")
            tableMapping.ColumnMappings.Add("DocRegisttxt", "DocRegisttxt")
            tableMapping.ColumnMappings.Add("StateTxt", "StateTxt")
            tableMapping.ColumnMappings.Add("StateID", "StateID")
            tableMapping.ColumnMappings.Add("TrustExistID", "TrustExistID")
            tableMapping.ColumnMappings.Add("PanelID", "PanelID")
            tableMapping.ColumnMappings.Add("OKDate", "OKDate")
            tableMapping.ColumnMappings.Add("FileTypeTxt", "FileTypeTxt")
            tableMapping.ColumnMappings.Add("DieID", "DieID")
            tableMapping.ColumnMappings.Add("ProjectID", "ProjectID")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.IsoDoc.My.MySettings.Default.Archive_NewConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT MapID, CheckerPersonID, DocTypeID, DoctypeName, RegistTypeID, ReviewDate, "& _ 
                "ReviewNum, PgTypeID, DocumentTypeID, IsoDocViewID, DocStateID, FilePath, FileTyp"& _ 
                "eID, Explain, MapStateID, DesignDate, SheetNum, EnterDate, DocumentTypetxt, PgTy"& _ 
                "peTxt, IsoDocViewTxt, MapStateTxt, PersonID, DesignerPersonID, DesignerName, Che"& _ 
                "kerName, DocRegisttxt, StateTxt, StateID, TrustExistID, PanelID, OKDate, FileTyp"& _ 
                "eTxt, DieID, ProjectID FROM dbo.VwAch_DieMaps"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As Archive_NewDataSet1.VwAch_DieMapsDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As Archive_NewDataSet1.VwAch_DieMapsDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As Archive_NewDataSet1.VwAch_DieMapsDataTable = New Archive_NewDataSet1.VwAch_DieMapsDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
End Namespace
